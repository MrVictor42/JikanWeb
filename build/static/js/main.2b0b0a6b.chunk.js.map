{"version":3,"sources":["api/jikanService.js","services/auxServices.js","services/consts.js","api/anime.js","components/modals/DetailAnime.js","components/lists/ListAnime.js","components/anime/AnimeList.js","components/anime/AnimeListDay.js","components/homepage/Homepage.js","components/anime/DetailAnimeSearch.js","api/manga.js","components/modals/DetailManga.js","components/lists/ListManga.js","components/search/AdvancedSearch.js","components/manga/MangaList.js","components/anime/AnimeListTop.js","images/profile_pic.jpg","components/contact/Contact.js","routes.js","components/layout/LeftMenu.js","components/layout/Searchbar.js","components/layout/Navbar.js","components/layout/Layout.js","App.js","index.js"],"names":["axios","create","baseURL","dayOfWeek","day","Date","weekday","Array","getDay","currentMonth","getMonth","currentYear","getFullYear","currentSeason","currentSeasonAnime","getListAnime","a","defaults","headers","get","anime","data","getAnimeDetailFromJikan","mal_id","detail","getListTopAnime","top","getListAnimeDay","getListSearchGenre","type","genre_id","search","manga","Meta","Card","DetailAnime","props","useState","visible","setVisible","animeDetail","setAnimeDetail","loading","setLoading","anime_id","useEffect","getDetailAnime","className","onClick","src","image_url","preview","title","width","height","placement","closable","onClose","gutter","style","backgroundColor","span","marginTop","paddingLeft","paddingRight","textAlign","bordered","avatar","description","title_synonyms","synopsis","episodes","status","score","producers","map","producer","name","studios","studio","genres","genre","opening_themes","ending_themes","trailer_url","url","ListAnime","undefined","animeList","tip","message","fontFamily","WebkitFontSmoothing","margin","padding","boxSizing","display","alignItems","color","textTransform","fontSize","fontWeight","letterSpacing","marginLeft","messageType","flex","borderBottom","borderRadius","marginRight","itemLayout","size","pagination","position","showSizeChanger","pageSize","grid","column","dataSource","renderItem","Item","actions","AnimeList","setAnimeList","syncList","AnimeListDay","setDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","getAnimeListDay","Homepage","DetailAnimeSearch","setAnime","match","params","selectedAnime","getSelectedAnime","getListManga","getManga","DetailManga","mangaDetail","setMangaDetail","manga_id","getDetailManga","publishing","published","prop","from","month","year","to","chapter","background","ListManga","mangaList","types","label","value","AdvancedSearch","Form","useForm","form","formLayout","setGenres","setMangaList","setMessageType","setType","names","aux","length","push","genreList","onFinish","values","selectedType","gender","valueGenre","filter","layout","initialValues","paddingTop","Group","options","optionType","buttonStyle","rules","required","placeholder","block","htmlType","resetFields","MangaList","AnimeListTop","Contact","Profile_Pic","TeamOutlined","MailOutlined","PhoneOutlined","GithubOutlined","href","BaseRouter","exact","path","component","SubMenu","Menu","MenuItemGroup","ItemGroup","useBreakpoint","Grid","LeftMenu","md","mode","Searchbar","animeForSearch","key","id","shape","icon","getAnimeList","dropdownClassName","dropdownMatchSelectWidth","filterOption","inputValue","option","toUpperCase","indexOf","Navbar","CustomLayout","children","App","Layout","Component","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","locale","en_US","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b0b0a6b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({ baseURL: 'https://api.jikan.moe/v3/' });","export const dayOfWeek = () => {\n\n    const day = new Date();\n    const weekday = new Array(7);\n    weekday[0] = 'sunday';\n    weekday[1] = 'monday';\n    weekday[2] = 'tuesday';\n    weekday[3] = 'wednesday';\n    weekday[4] = 'thursday';\n    weekday[5] = 'friday';\n    weekday[6] = 'saturday';\n\n    return weekday[day.getDay()];\n};\n\nexport const currentSeasonAnime = (currentMonth) => {\n    \n    let season = '';\n\n    if(currentMonth >= 3 && currentMonth <= 5) {\n        season = 'spring';\n    } else if(currentMonth > 5 && currentMonth <= 8) {\n        season = 'summer';\n    } else if(currentMonth > 8 && currentMonth <= 11) {\n        season = 'fall';\n    } else {\n        season = 'winter';\n    }\n\n    return season;\n};\n\nexport const genreList = () => {\n\n    let genres = [];    \n    const names = [\n        'Action', 'Adventure', 'Cars', 'Comedy', 'Dementia', 'Demons', 'Mystery',\n        'Drama', 'Ecchi', 'Fantasy', 'Game', 'Hentai', 'Historical', 'Horror', \n        'Kids', 'Magic', 'Martial Arts', 'Mecha', 'Music', 'Parody', 'Samurai',\n        'Romance', 'School', 'Sci-Fi', 'Shoujo', 'Shoujo Ai', 'Shounen', \n        'Shounen Ai', 'Space', 'Sports', 'Super Power', 'Vampire', 'Yaoi', 'Yuri',\n        'Harem', 'Slice of Life', 'Supernatural', 'Military', 'Police', 'Psychological',\n        'Thriller', 'Seinen', 'Josei'\n    ];\n\n    for(let aux = 0; aux < names.length; aux ++) {\n        genres.push({\n            value: aux + 1,\n            label: names[aux]\n        });\n    }\n\n    return genres;\n};","import { currentSeasonAnime } from './auxServices';\n\nconst currentMonth = new Date().getMonth() + 1;\nexport const currentYear = new Date().getFullYear();\nexport const currentSeason = currentSeasonAnime(currentMonth);","import axios from 'axios';\n\nimport baseURL from './jikanService';\nimport { currentSeason, currentYear } from '../services/consts';\n\nexport const getListAnime = async() => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        const anime = await baseURL.get(`season/${ currentYear }/${ currentSeason }`);\n        return anime.data.anime;\n    } catch {\n        return false;\n    }\n};\n\nexport const getAnimeDetailFromJikan = async(mal_id) => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        const detail = await baseURL.get(`anime/${ mal_id }`);\n        return detail.data;\n    } catch {\n        return false;\n    }\n};\n\nexport const getListTopAnime = async() => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        const top = await baseURL.get('top/anime');\n        return top.data.top;\n    } catch {\n        return false;\n    }\n}\n\nexport const getListAnimeDay = async(day) => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        return await baseURL.get(`schedule/${ day }`);\n    } catch {\n        return false;\n    }\n};\n\nexport const getListSearchGenre = async(type, genre_id) => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        const search = await baseURL.get(`genre/${ type }/${ genre_id }`);\n        if(type === 'anime') {\n            return search.data.anime;\n        } else {\n            return search.data.manga;\n        }\n    } catch {\n        return false;\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Drawer, Image, Col, Row, Card, Spin } from 'antd';\nimport ReactPlayer from 'react-player';\n\nimport { getAnimeDetailFromJikan } from '../../api/anime';\n\nconst { Meta } = Card;\n\nconst DetailAnime = (props) => {\n\n    const [visible, setVisible] = useState(false);\n    const [animeDetail, setAnimeDetail] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getDetailAnime(props);\n    }, []);\n\n\tasync function getDetailAnime(props) {\n        setLoading(true);\n        const detail = await getAnimeDetailFromJikan(props.anime_id);\n        setAnimeDetail(detail);\n        setLoading(false);\n    }\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            {\n                loading ? (\n                    <Spin className = 'loadingSpin'/>\n                ) : (\n                    <>\n                        <a onClick = { showDrawer }>\n                            <Image \n                                className = 'img_list' src = { animeDetail.image_url }\n                                preview = { false } \n                            />    \n                        </a>\n                        <Drawer\n                            title = { <b> { `Anime: ${ animeDetail.title }` } </b> } \n                            width = { 1370 } height = { 'auto' }\n                            placement = 'right' closable = { true } onClose = { onClose } visible = { visible } preview = { false }\n                        >\n                            <Row \n                                gutter = { 20 } style = {{ width: 'auto', backgroundColor: 'white' }}\n                            >\n                                <Col span = { 12 }>\n                                    <Card \n                                        style = {{ \n                                            width: 'auto', marginTop: 20, paddingLeft: 20, paddingRight: 20,\n                                            textAlign: 'justify' \n                                        }}\n                                        bordered = { false }\n                                    >\n                                        <Meta\n                                            avatar = {\n                                                <Image \n                                                    className = 'img_list' \n                                                    src = { animeDetail.image_url } \n                                                />\n                                            }\n                                            title = { <b> { animeDetail.title } </b> }\n                                            description = {\n                                                <>\n                                                    <p> \n                                                        <b> Title Synonyms </b> \n                                                        { animeDetail.title_synonyms }\n                                                    </p>\n                                                    <p> \n                                                        <b> Synopsis: </b> \n                                                        { animeDetail.synopsis } \n                                                    </p>\n\n                                                    { animeDetail.episodes === null ? (\n                                                        <p> <b> Episodes: </b> Undefined </p>\n                                                    ) : (\n                                                        <p> \n                                                            <b> Episodes: </b> \n                                                            { animeDetail.episodes } \n                                                        </p>\n                                                    )}\n\n                                                    <p> <b> Status: </b> { animeDetail.status } </p>\n\n                                                    { animeDetail.score === null ? (\n                                                        <p> <b> Score: </b> Undefined </p>  \n                                                    ) : (\n                                                        <p> <b> Score: </b> { animeDetail.score } </p>\n                                                    )}\n\n                                                    <p>\n                                                        <b> Producers: </b>\n                                                        { animeDetail.producers.map(function(producer){\n                                                            return (\n                                                                <span key = { producer.mal_id }> \n                                                                    { ' ' + producer.name } |  \n                                                                </span>\n                                                            )\n                                                        })}\n                                                    </p>\n\n                                                    <p> \n                                                        <b> Studios: </b> \n                                                        { animeDetail.studios.map(function(studio) {\n                                                            return (\n                                                                <span key = { studio.mal_id }> \n                                                                    { ' ' + studio.name } | \n                                                                </span>\n                                                            )\n                                                        })} \n                                                    </p>\n\n                                                    <p> \n                                                        <b>Genders: </b> \n                                                        { animeDetail.genres.map(function(genre){\n                                                            return (\n                                                                <span key = { genre.mal_id }> \n                                                                    {' ' + genre.name } | \n                                                                </span>\n                                                            )\n                                                        })} \n                                                    </p>\n                                                    \n                                                    <p> \n                                                        <b> Opening Theme: </b> \n                                                        { animeDetail.opening_themes[0] } \n                                                    </p>\n                                                    <p> <b> Ending Theme: </b> \n                                                        { animeDetail.ending_themes[0] } \n                                                    </p>                                \n                                                </>\n                                            }\n                                        />\n                                    </Card>\n                                </Col>\n                                <Col span = { 8 }>\n                                    {\n                                        animeDetail.trailer_url !== null ? (\n                                            <>\n                                                \n                                                <ReactPlayer \n                                                    url = { animeDetail.trailer_url } \n                                                    style = {{ marginTop: '40px'}}\n                                                />\n                                            </>\n                                        ) : (\n                                            null\n                                        )\n                                    }\n                                </Col>\n                            </Row>\n                        </Drawer> \n                    </>\n                )\n            }\n            \n        </>\n    )\n};\n\nexport default DetailAnime;","import React from 'react';\nimport { List, Spin, Divider } from 'antd';\n\nimport DetailAnime from '../modals/DetailAnime';\n\nconst ListAnime = (props) => {\n\n    return (\n        props.animeList === undefined ? (\n            null\n        ) : (\n            props.loading ? (\n                <Spin tip = { props.message } className = 'loadingSpin'/>\n            ) : (\n                <>\n                    <div \n                        style = {{ fontFamily: 'Roboto,sans-serif', WebkitFontSmoothing: 'antialiased', \n                        margin: 0, padding: 0, boxSizing: 'border-box' }}\n                    >\n                        <div style = {{ display: 'flex', alignItems: 'center' }}>\n                            <h2 style = {{ color: '#1890ff', textTransform: 'uppercase', fontSize: '18px', fontWeight: 700, letterSpacing: '1.2px', marginLeft: '40px' }}> \n                                { props.messageType }\n                            </h2>\n                            <div style = {{ flex: 1, borderBottom: '1px solid #9e9e9e', marginLeft: '12px', borderRadius: '8px', marginRight: '35px' }}></div>\n                        </div>\n                    </div>\n                    <List\n                        itemLayout = 'vertical' size = 'small'\n                        pagination = {{ \n                            position: 'bottom', showSizeChanger: false, pageSize: 4 }\n                        } \n                        grid = {{ column: 4 }}\n                        dataSource = { props.animeList } \n                        style = {{ \n                            margin: 'auto', width: 'auto', paddingLeft: '30px', \n                            paddingRight: '35px' \n                        }}\n                        renderItem = { anime => (\n                            <List.Item \n                                key = { anime.mal_id }\n                                actions = {[ <DetailAnime anime_id = { anime.mal_id }/> ]}\n                            >\n                            </List.Item>\n                        )}\n                    />\n                    <Divider />\n                </>\n            )\n        )\n    );\n};\n\nexport default ListAnime;","import React, { useState, useEffect } from 'react';\n\nimport { getListAnime } from '../../api/anime';\nimport { currentSeason } from '../../services/consts';\n\nimport ListAnime from '../lists/ListAnime';\n\nconst AnimeList = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [animeList, setAnimeList] = useState([]);\n\n    useEffect(() => {\n        syncList();\n    },[]);\n\n    async function syncList() {\n        setLoading(true);\n        const anime = await getListAnime();\n        setAnimeList(anime);\n        setLoading(false);\n    }\n\n    return (\n        <ListAnime \n            animeList = { animeList } loading = { loading } \n            messageType = {` Anime List of Season ${ currentSeason } `}\n            message = 'Loading Anime List, Wait For ...'\n        />\n    );\n}\n\nexport default AnimeList;","import React, { useState, useEffect } from 'react';\n\nimport { getListAnimeDay } from '../../api/anime';\nimport { dayOfWeek } from '../../services/auxServices';\n\nimport ListAnime from '../lists/ListAnime';\n\nconst AnimeListDay = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [animeList, setAnimeList] = useState([]);\n    const [day, setDay] = useState();\n\n    useEffect(() => {\n\t\tgetAnimeListDay();\n    }, []);\n\n    async function getAnimeListDay() {\n\t\tsetLoading(true);\n        const day = dayOfWeek();\n\t\tconst anime = await getListAnimeDay(day);\n\n        switch(day) {\n            case 'sunday':\n                setAnimeList(anime.data.sunday);\n                break;\n            case 'monday':\n                setAnimeList(anime.data.monday);\n                break;\n            case 'tuesday':\n                setAnimeList(anime.data.tuesday);\n                break;\n            case 'wednesday':\n                setAnimeList(anime.data.wednesday);\n                break;\n            case 'thursday':\n                setAnimeList(anime.data.thursday);\n                break;\n            case 'friday':\n                setAnimeList(anime.data.friday);\n                break;\n            case 'saturday':\n                setAnimeList(anime.data.saturday);\n                break;\n        }\n        setDay(day);\n        setLoading(false);\n\t}\n\n    return (\n        <ListAnime \n            animeList = { animeList } loading = { loading } \n            messageType = {` Anime List of ${ day } `}\n            message = 'Loading Anime List Day, Wait For ...'\n        />\n    )\n};\n\nexport default AnimeListDay;","import React from 'react';\n\nimport AnimeList from '../anime/AnimeList';\nimport AnimeListDay from '../anime/AnimeListDay';\n\nconst Homepage = () => {\n    return (\n        <>\n            <AnimeListDay />\n            <AnimeList />\n        </>\n    );\n}\n\nexport default Homepage;","import React, { useState, useEffect } from 'react';\nimport { Skeleton, Image, Card, Col, Row } from 'antd';\nimport ReactPlayer from 'react-player';\n\nimport { getAnimeDetailFromJikan } from '../../api/anime';\n\nconst { Meta } = Card;\n\nconst DetailAnimeSearch = (props) => {\n\n    const [loading, setLoading] = useState(true);\n    const [anime, setAnime] = useState();\n    \n    useEffect(() => {\n        getSelectedAnime(props);\n    }, []);\n\n    async function getSelectedAnime(props) {\n        setLoading(true);\n        const selectedAnime = await getAnimeDetailFromJikan(props.match.params.mal_id);\n        setAnime(selectedAnime);\n        setLoading(false);\n    }\n\n    return (\n        <>\n            {\n                loading === true ? (\n                    <Skeleton />\n                ) : (\n                    <Row gutter = { 20 } style = {{ width: 'auto', backgroundColor: 'white' }}>\n                        <Col span = { 12 }>\n                            <Card \n                                style = {{ \n                                    width: 'auto', marginTop: 20, paddingLeft: 20, paddingRight: 20,\n                                    textAlign: 'justify' \n                                }}\n                                bordered = { false }\n                            >\n                                <Meta\n                                    avatar = {\n                                        <Image className = 'img_list' src = { anime.image_url } />\n                                    }\n                                    title = { <b> { anime.title } </b> }\n                                    description = {\n                                        <>\n                                            <p> \n                                                <b> Title Synonyms </b> \n                                                { anime.title_synonyms }\n                                            </p>\n                                            <p> \n                                                <b> Synopsis: </b> \n                                                { anime.synopsis } \n                                            </p>\n\n                                            { anime.episodes === null ? (\n                                                <p> <b> Episodes: </b> Undefined </p>\n                                            ) : (\n                                                <p> \n                                                    <b> Episodes: </b> \n                                                    { anime.episodes } \n                                                </p>\n                                            )}\n\n                                            <p> <b> Status: </b> { anime.status } </p>\n\n                                            { anime.score === null ? (\n                                                <p> <b> Score: </b> Undefined </p>  \n                                            ) : (\n                                                <p> <b> Score: </b> { anime.score } </p>\n                                            )}\n\n                                            <p>\n                                                <b> Producers: </b>\n                                                { anime.producers.map(function(producer){\n                                                    return (\n                                                        <span key = { producer.mal_id }> \n                                                            { ' ' + producer.name } |  \n                                                        </span>\n                                                    )\n                                                })}\n                                            </p>\n\n                                            <p> \n                                                <b> Studios: </b> \n                                                { anime.studios.map(function(studio) {\n                                                    return (\n                                                        <span key = { studio.mal_id }> \n                                                            { ' ' + studio.name } | \n                                                        </span>\n                                                    )\n                                                })} \n                                            </p>\n\n                                            <p> \n                                                <b>Genders: </b> \n                                                { anime.genres.map(function(genre){\n                                                    return (\n                                                        <span key = { genre.mal_id }> \n                                                            {' ' + genre.name } | \n                                                        </span>\n                                                    )\n                                                })} \n                                            </p>\n                                            \n                                            <p> \n                                                <b> Opening Theme: </b> \n                                                { anime.opening_themes[0] } \n                                            </p>\n                                            <p> <b> Ending Theme: </b> \n                                                { anime.ending_themes[0] } \n                                            </p>                                \n                                        </>\n                                    }\n                                />\n                            </Card>\n                        </Col>\n                        <Col span = { 8 }>\n                            {\n                                anime.trailer_url !== null ? (\n                                    <>\n                                        \n                                        <ReactPlayer \n                                            url = { anime.trailer_url } \n                                            style = {{ marginTop: '40px'}}\n                                        />\n                                    </>\n                                ) : (\n                                    null\n                                )\n                            }\n                        </Col>\n                    </Row>\n                )\n            }\n        </>\n    )\n};\n\nexport default DetailAnimeSearch;","import axios from 'axios';\n\nimport baseURL from './jikanService';\n\nexport const getListManga = async() => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        return await baseURL.get('top/manga');\n    } catch {\n        return false;\n    }\n};\n\nexport const getManga = async(mal_id) => {\n\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n    }\n\n    try {\n        const detail = await baseURL.get(`manga/${ mal_id }`);\n        return detail.data;\n    } catch {\n        return false;\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Drawer, Image, Col, Row, Spin } from 'antd';\n\nimport { getManga } from '../../api/manga';\n\nconst DetailManga = (props) => {\n\n    const [visible, setVisible] = useState(false);\n    const [mangaDetail, setMangaDetail] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getDetailManga(props);\n    }, []);\n\n\tasync function getDetailManga(props) {\n        setLoading(true);\n        const detail = await getManga(props.manga_id);\n        setMangaDetail(detail);\n        setLoading(false);\n    }\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            {\n                loading ? (\n                    <Spin className = 'loadingSpin'/>\n                ) : (\n                    <>\n                        <a onClick = { showDrawer }>\n                            <Image \n                                className = 'img_list' src = { mangaDetail.image_url } \n                                preview = { false }\n                            />    \n                        </a>\n                        <Drawer\n                            title = { <b> { `Manga: ${ mangaDetail.title }` } </b> } \n                            width = { 'auto' } height = { 'auto' }\n                            placement = 'right' closable = { true } onClose = { onClose } visible = { visible }\n                        >\n                            <Row>\n                                <Image \n                                    className = 'img_list' src = { mangaDetail.image_url } \n                                    style = {{ marginTop: '20px', marginLeft: '20px' }}\n                                />\n                                <Col span = { 12 } \n                                    style = {{ marginTop: '20px', marginLeft: '20px', textAlign: 'justify' }}\n                                >\n                                    <p> <b> Title: </b> { mangaDetail.title } </p>\n                                    <p> <b> Status: </b> { mangaDetail.status } </p>\n\n                                    {\n                                        mangaDetail.publishing === true ? (\n                                            <>\n                                                <p> <b> Start_Date: </b> \n                                                    { mangaDetail.published.prop.from.month }-\n                                                    { mangaDetail.published.prop.from.day }- \n                                                    { mangaDetail.published.prop.from.year }\n                                                </p>\n                                                <p> <b> End_Date: </b> Undefined </p>\n                                                <p> <b> Chapters: </b> Undefined </p> \n                                            </>\n                                        ) : (\n                                            <>\n                                                <p> <b> Start Date: </b> \n                                                    { mangaDetail.published.prop.from.month }-\n                                                    { mangaDetail.published.prop.from.day }- \n                                                    { mangaDetail.published.prop.from.year }\n                                                </p>\n                                                <p> <b> End Date: </b> \n                                                    { mangaDetail.published.prop.to.month }-\n                                                    { mangaDetail.published.prop.to.day }- \n                                                    { mangaDetail.published.prop.to.year }\n                                                </p>\n                                                <p> <b> Chapters: </b> { mangaDetail.chapter } </p>\n                                            </>\n                                        )\n                                    }\n\n                                    <p> <b> Score: </b> { mangaDetail.score } </p>\n                                    <p> <b> Type: </b> { mangaDetail.type } </p>\n                                    <p> <b> Synopsis: </b> { mangaDetail.synopsis } </p>\n                                    <p> <b> Background: </b> { mangaDetail.background } </p>\n                                    <p> <b> Genres: </b> { mangaDetail.genres.map(function(genre){\n                                        return (\n                                            <span key = { genre.mal_id }>\n                                                { ' ' + genre.name } |\n                                            </span>\n                                        )\n                                    })} </p>\n                                </Col>\n                            </Row>\n                        </Drawer>\n                    </>\n                )\n            }\n        </>\n    )\n};\n\nexport default DetailManga;","import React from 'react';\nimport { List, Spin } from 'antd';\n\nimport DetailManga from '../modals/DetailManga';\n\nconst ListManga = (props) => {\n\n    return (\n        props.loading ? (\n            <Spin tip = { props.message } className = 'loadingSpin'/>\n        ) : (\n            <>\n                <div \n                    style = {{ fontFamily: 'Roboto,sans-serif', WebkitFontSmoothing: 'antialiased', \n                    margin: 0, padding: 0, boxSizing: 'border-box' }}\n                >\n                    <div style = {{ display: 'flex', alignItems: 'center' }}>\n                        <h2 style = {{ color: '#1890ff', textTransform: 'uppercase', fontSize: '18px', fontWeight: 700, letterSpacing: '1.2px', marginLeft: '40px' }}> \n                            { props.messageType }  \n                        </h2>\n                        <div style = {{ flex: 1, borderBottom: '1px solid #9e9e9e', marginLeft: '12px', borderRadius: '8px', marginRight: '35px' }}></div>\n                    </div>\n                </div>\n                <List\n                    itemLayout = 'vertical' size = 'small'\n                    pagination = {{ \n                        position: 'both', showSizeChanger: false }\n                    } \n                    grid = {{ column: 5 }}\n                    dataSource = { props.mangaList } \n                    style = {{ \n                        margin: 'auto', width: 'auto', paddingLeft: '30px', \n                        paddingRight: '35px' \n                    }}\n                    renderItem = { manga => (\n                        <List.Item \n                            key = { manga.mal_id }\n                            actions = {[ <DetailManga manga_id = { manga.mal_id }/> ]}\n                        >    \n                        </List.Item>\n                    )}\n                />\n            </>\n        )\n    )\n};\n\nexport default ListManga;","import React, { useState, useEffect } from 'react';\nimport { Cascader, Form, Button, Radio } from 'antd';\n\nimport { getListSearchGenre } from '../../api/anime';\nimport { genreList } from '../../services/auxServices';\n\nimport ListAnime from '../lists/ListAnime';\nimport ListManga from '../lists/ListManga';\n\nconst types = [\n\t{ label: 'Anime', value: 'anime' },\n\t{ label: 'Manga', value: 'manga' },\n];\n\nconst AdvancedSearch = () => {\n\n    const [form] = Form.useForm();\n  \tconst [formLayout] = useState('inline');\n\tconst [genres, setGenres] = useState('');\n\tconst [loading, setLoading] = useState(true);\n    const [animeList, setAnimeList] = useState([]);\n    const [mangaList, setMangaList] = useState([]);\n\tconst [messageType, setMessageType] = useState('');\n\tconst [type, setType] = useState();\n\n\tuseEffect(() => {\n\t\tconst genres = genreList();\n\t\tsetType(type)\n\t\tsetGenres(genres);\n\t}, []);\n\n    const onFinish = async (values) => {\n\t\tlet selectedType = values.type;\n\t\tif(selectedType === undefined) {\n\t\t\tselectedType = 'anime'; \n\t\t}\n\n\t\tsetType(selectedType);\n\n\t\tconst genre = values.gender;\n\t\tsetLoading(true);\n\t\tconst search = await getListSearchGenre(selectedType, genre[0]);\n\n\t\tif(selectedType === 'anime') {\n\t\t\tsetAnimeList(search);\n\t\t}else {\n\t\t\tsetMangaList(search);\n\t\t}\n\n\t\tconst valueGenre = genres.filter(function(genres) {\n\t\t\treturn genres.value == genre[0];\n\t\t});\n\t\tsetMessageType(`${ selectedType } List of ${ valueGenre[0].label }`);\n\t\tsetLoading(false);\n\t};\n\n\tconst restoreList = () => {\n\t\tsetMessageType('Empty list, please search anything ...');\n\t\tsetAnimeList([]);\n\t\tsetMangaList([]);\n\t}\n\n    return (\n        <>\n\t\t\t<Form \n\t\t\t\tlayout = { formLayout } form = { form } initialValues = {{ layout: formLayout }}\n\t\t\t\tstyle = {{ paddingTop: '20px', margin: 'auto', width: 'auto', height: '100%', paddingLeft: '3%', textTransform: 'uppercase' }}\n\t\t\t\tonFinish = { onFinish }\n\t\t\t>\n\t\t\t<Form.Item name = 'type' value = { type }>\n\t\t\t\t<Radio.Group\n\t\t\t\t\toptions = { types }  \n\t\t\t\t\toptionType = 'button' buttonStyle = 'solid'\n\t\t\t\t\tvalue = { type }\n\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\tcolor: '#1890ff', background: 'black', \n\t\t\t\t\t\tpaddingRight: '20px', fontWeight: 'bold' \n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t\n\t\t\t\t<Form.Item \n\t\t\t\t\tlabel = { \n\t\t\t\t\t\t<b style = {{ color: '#1890ff' }}> \n\t\t\t\t\t\t\tGenres \n\t\t\t\t\t\t</b> } \n\t\t\t\t\tname = { 'gender' } \n\t\t\t\t\trules = {[{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: 'Please, Select a Genre.',\n\t\t\t\t\t}]}\n\t\t\t\t>\n\t\t\t\t\t<Cascader\n\t\t\t\t\t\tplaceholder = { '' } \n\t\t\t\t\t\toptions = { genres} \n\t\t\t\t\t\tstyle = {{ width: '120px' }} \n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tblock htmlType = 'submit' style = {{ color: '#1890ff',\n\t\t\t\t\t\tbackground: 'black', textTransform: 'uppercase' }}> \n\t\t\t\t\t\t<b> Apply </b> \n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tblock style = {{ color: '#1890ff',\n\t\t\t\t\t\tbackground: 'black', \n\t\t\t\t\t\ttextTransform: 'uppercase' }} \n\t\t\t\t\t\tonClick={() => { { form.resetFields()}; restoreList() }}> \n\t\t\t\t\t\t<b> Restore </b> \n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t\t{\n\t\t\t\ttype === 'anime' || type === undefined ? (\n\t\t\t\t\t<ListAnime \n\t\t\t\t\t\tanimeList = { animeList } loading = { loading } \n\t\t\t\t\t\tmessageType = { messageType }\n\t\t\t\t\t\tmessage = 'Waiting For Search...'\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<ListManga \n\t\t\t\t\t\tmangaList = { mangaList } loading = { loading }\n\t\t\t\t\t\tmessageType = { messageType }\n\t\t\t\t\t\tmessage = 'Waiting For Search...'\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n    )\n};\n\nexport default AdvancedSearch;","import React, { useState, useEffect } from 'react';\n\nimport { getListManga } from '../../api/manga';\n\nimport ListManga from '../lists/ListManga';\n\nconst MangaList = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [mangaList, setMangaList] = useState([]);\n\n    useEffect(() => {\n        syncList();\n    },[]);\n\n    async function syncList() {\n        setLoading(true);\n        const manga = await getListManga();\n        setMangaList(manga.data.top);\n        setLoading(false);\n    }\n\n    return (\n        <ListManga \n            mangaList = { mangaList } loading = { loading }\n            messageType = 'Manga List'\n            message = 'Loading Manga List, Wait For ...'\n        />\n    )\n};\n\nexport default MangaList;","import React, { useState, useEffect } from 'react';\n\nimport { getListTopAnime } from '../../api/anime';\n\nimport ListAnime from '../lists/ListAnime';\n\nconst AnimeListTop = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [animeList, setAnimeList] = useState([]);\n\n    useEffect(() => {\n        syncList();\n    },[]);\n\n    async function syncList() {\n        setLoading(true);\n        const top = await getListTopAnime();\n        setAnimeList(top);\n        setLoading(false);\n    }\n\n    return (\n        <ListAnime\n            animeList = { animeList } loading = { loading } \n            messageType = 'Top List Anime'\n            message = 'Loading Anime List TOP!, Wait For ...'\n        />\n    )\n};\n\nexport default AnimeListTop;","export default __webpack_public_path__ + \"static/media/profile_pic.270d2ef6.jpg\";","import React from 'react';\nimport { Card, Col, Row, Image } from 'antd';\nimport { TeamOutlined, MailOutlined, PhoneOutlined, GithubOutlined } from '@ant-design/icons';\n\nimport Profile_Pic from '../../images/profile_pic.jpg';\n\nconst Contact = () => {\n\n    return (\n        <Row gutter = { 16 } style = {{ width: 'auto', backgroundColor: 'white' }}>\n            <Col span = { 5 }>\n                <Card bordered = { false } \n                    style = {{ marginTop: 20, paddingLeft: 20, paddingRight: 20 }}\n                >\n                    <Image className = 'img_list' src = { Profile_Pic } preview = { false }\n                    style = {{ width: '200px' }}/>\n                </Card>\n            </Col>\n            <Col span = { 8 }>\n                <Card title = { <h3> <b> Who I Am? </b> </h3> } bordered = { false }>\n                    <p> It's a good question, who i am don't think? My name is Victor, brazilian, graduated in software engineering from the University of Brasília, Brazil. </p>\n                    <h2> <TeamOutlined /> Contact </h2> \n                    <h3> <MailOutlined /> victormota042@gmail.com </h3>\n                    <h3> <PhoneOutlined /> +55 (61) 99459-2869 </h3>\n                    <h3> <GithubOutlined /> \n                        <a \n                            href = 'https://github.com/MrVictor42/'> https://github.com/MrVictor42/\n                        </a> \n                    </h3>\n                </Card>\n            </Col>\n            <Col span = { 8 }>\n                <Card title = { <h3> <b> Project </b> </h3> } bordered = { false }>\n                    <p> In this project, i used api of <a href = 'https://jikan.docs.apiary.io/'> Jikan </a> in this project. For the frontend i use ReactJS and backend Java with spring boot. Initialy this project was to learn more about Java Spring Boot. In each repository will have more about each side. </p>\n                    <h3> <GithubOutlined /> \n                        <a href = 'https://github.com/MrVictor42/jikanWeb'> FrontEnd - React </a> \n                    </h3>\n                    <h3> <GithubOutlined /> \n                        <a \n                            href = 'https://github.com/MrVictor42/apiJikan'> Backend - Java/\n                        </a> \n                    </h3>\n                </Card>\n            </Col>\n        </Row>\n    )\n};\n\nexport default Contact;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Homepage from './components/homepage/Homepage';\nimport DetailAnimeSearch from './components/anime/DetailAnimeSearch';\nimport AdvancedSearch from './components/search/AdvancedSearch';\nimport MangaList from './components/manga/MangaList';\nimport AnimeListTop from './components/anime/AnimeListTop';\nimport Contact from './components/contact/Contact';\n\nconst BaseRouter = () => (\n    <>\n        <Route exact path = '/' component = { Homepage } />\n        <Route exact path = '/list_anime' component = { Homepage } />\n        <Route path = '/top_anime' component = { AnimeListTop } />\n        <Route exact path = '/list_manga' component = { MangaList } />\n        <Route path = '/anime/search/:mal_id' component = { DetailAnimeSearch } />\n        <Route path = '/contact' component = { Contact } />\n        <Route path = '/advanced_search' component = { AdvancedSearch } />\n    </>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Menu, Grid } from 'antd';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst LeftMenu = () => {\n  \tconst { md } = useBreakpoint();\n\treturn (\n\t\t<Menu mode = { md ? 'horizontal' : 'inline' } \n\t\t\tstyle = {{ fontSize: '16px', color: '#1890ff', background: 'black' }}\n\t\t>\n\t\t\t<SubMenu key = 'content' title = { <span> Content </span> }>\n\t\t\t\t<MenuItemGroup title = 'Anime'>\n\t\t\t\t\t<Menu.Item key = 'animeContent'> <a href = '/list_anime'> Anime </a> </Menu.Item>\n\t\t\t\t</MenuItemGroup>\n\t\t\t\t<MenuItemGroup title = 'Manga'>\n\t\t\t\t\t<Menu.Item key = 'mangaContent'> <a href = '/list_manga'> Manga </a> </Menu.Item>\n\t\t\t\t</MenuItemGroup>\n\t\t\t</SubMenu>\n\t\t\t<Menu.Item key = 'top10'>\n\t\t\t\t<a href = '/top_anime' style = {{ fontSize: '16px', color: '#1890ff' }}> Top10! </a>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item key = 'advanced_search'>\n\t\t\t\t<a href = '/advanced_search' style = {{ fontSize: '16px', color: '#1890ff' }}> \n\t\t\t\t\tAdvanced Search \n\t\t\t\t</a>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item key = 'contact'>\n\t\t\t\t<a href = '/contact' style = {{ fontSize: '16px', color: '#1890ff' }}> Contact </a>\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t);\n}\n\nexport default LeftMenu;","import React, { useState, useEffect } from 'react';\nimport { Input, AutoComplete, Avatar, Image } from 'antd';\n\nimport { getListAnime } from '../../api/anime';\nimport { currentSeason } from '../../services/consts';\n\nimport '../../css/searchbar.css';\n\nconst Searchbar = () => {\n\n    const[animeList, setAnimeList] = useState([]);\n    \n    useEffect(() => {\n        getAnimeList();\n    }, []);\n\n    async function getAnimeList() {\n        const anime = await getListAnime();\n        const animeForSearch = anime.map(function(anime) {\n            return {\n                key: anime.id,\n                value: anime.title,\n                label: (\n                    <>\n                        <Avatar \n                            shape = 'square' size = { 64 } \n                            icon = { <Image  src = { anime.image_url } />}\n                        />\n\n                        <a href = { `/anime/search/${ anime.mal_id }` }> <b> { anime.title } </b> </a>\n                    </>\n                )\n            };\n        });\n        setAnimeList(animeForSearch);\n    }\n\n    return (\n        <AutoComplete\n            dropdownClassName = 'certain-category-search-dropdown'\n            dropdownMatchSelectWidth = { 300 } \n            className = 'searchbar'\n            options = { animeList }\n            filterOption = {(inputValue, option) =>\n                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n            }\n        >\n            <Input \n                placeholder = { `Search Here Anime From Season ${ currentSeason }...` } \n                style = {{ textTransform: 'capitalize' }}\n            />\n        </AutoComplete>\n    );\n}\n\nexport default Searchbar;","import React, { useState }from 'react';\nimport { Drawer, Button } from 'antd';\n\nimport LeftMenu from './LeftMenu';\nimport Searchbar from './Searchbar';\n\nconst Navbar = () => {\n\n\tconst [visible, setVisible] = useState(false);\n\n\tfunction showDrawer() {\n\t\tsetVisible(true);\n\t}\n\n\tfunction onClose() {\n\t\tsetVisible(false);\n\t}\n\n\treturn(\n\t\t<nav className = 'menuBar'>\n\t\t\t<div className = 'logo'>\n\t\t\t\t<a href = '/'>MyAn</a>\n\t\t\t</div>\n\t\t\t<div className = 'menuCon'>\n\t\t\t\t<div className = 'leftMenu'>\n\t\t\t\t\t<LeftMenu style = {{ fontSize: '16px', color: '#1890ff' }}/>\n\t\t\t\t</div>\n\t\t\t\t<Searchbar />\n\t\t\t\t<Button className = 'barsMenu' type = 'primary' onClick = { showDrawer }>\n\t\t\t\t\t<span className = 'barsBtn'></span>\n\t\t\t\t</Button>\n\t\t\t\t<Drawer\n\t\t\t\t\ttitle = 'Basic Drawer'\n\t\t\t\t\tplacement = 'left'\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { onClose }\n\t\t\t\t\tvisible = { visible }\n\t\t\t\t>\n\t\t\t\t\t<LeftMenu />\n\t\t\t\t</Drawer>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Navbar;","import React from 'react';\nimport { Layout } from 'antd';\n\nimport Navbar from './Navbar';\n\nconst CustomLayout = (props) => {\n    return(\n        <Layout style = {{ backgroundColor: 'black' }}>\n            <Navbar />\n            { props.children }\n        </Layout>\n    );\n}\n\nexport default CustomLayout;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\n\nimport './css/App.css';\nimport Layout from './components/layout/Layout';\n\nclass App extends Component {\n\n  \trender() {\n    \treturn (\n\t\t\t<Router>\n\t\t\t\t<Layout>\n\t\t\t\t\t<BaseRouter />\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ConfigProvider } from 'antd';\nimport en_US from 'antd/es/locale/en_US';\n\nimport App from './App';\nimport './css/index.css';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n\t<ConfigProvider locale = { en_US }>\n\t\t<Provider store = { store } >\n\t\t\t<App />\n\t\t</Provider>\n\t</ConfigProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}